(function(f){_.createKeyValueObject=function(w,y){var x={};x[w]=y;return x};var u=Backbone.View.extend({getFilters:function(){return this.collection.toJSON()},get:function(w){return this.model.get(w)},versions:function(){var x=this.get("columnControl").model.get("filterFactory").model.get("dataTypeWidgets"),w=_.groupBy(x,"type");return{ColumnFilters:this.version,ColumnSelectionControl:this.get("columnControl").version,FilterFactory:this.get("columnControl").model.get("filterFactory").versions(),ColumnFiltersContainer:this.get("filtersContainer").version,FilterSaveControl:this.get("filtersControl").version}},events:{"cc.filter.add":function(y,x){var w=new Backbone.Model(x);w.on("change",function(z,A){console.log("model change");this.collection.trigger("update")},this);this.collection.add(w)},"cc.filter.save":function(x,w){this.collection.get(w.cid).set(w.toJSON());this.get("columnControl").changeMode(f.fn.ColumnFilters.ControlModes.NORMAL);this.get("filtersContainer").enable();this.collection.trigger("update")},"fc.filter-remove.click":function(w,x){this.collection.remove(x)},"fc.filter-edit.click":function(x,y){var w=this.collection.get(y);if(w){this.get("columnControl").loadFilter(w);this.get("columnControl").changeMode(f.fn.ColumnFilters.ControlModes.EDIT);this.get("filtersContainer").disable()}},"cc.filter-cancel.click":function(w){this.get("columnControl").changeMode(f.fn.ColumnFilters.ControlModes.NORMAL);this.get("filtersContainer").enable()}},className:"columnfilters",initialize:function(w){this.version="1.0.3";w.ajax.context=this;this.model=new Backbone.Model(f.extend(_.omit(w,["filters","dataTypeWidgets","filterFactoryConfig","columnsControlConfig"]),{cachedFilter:null}));this.collection=new Backbone.Collection(w.filters);this.collection.on("update",function(x,y){this.trigger("filters.update",x,y);this.$el.trigger("filters.update",[x,y])},this);this.collection.on("reset",function(x,y){this.trigger("filters.reset",x,y);this.$el.trigger("filters.reset",[x,y])},this);if(w.columnsControlConfig.mode===f.fn.ColumnFilters.ControlModes.EDIT){w.columnsControlConfig.mode=f.fn.ColumnFilters.ControlModes.NORMAL}this.model.set("columnControl",new s(f.extend(w.columnsControlConfig,{columns:_.map(_.reject(w.columns,function(x){return _.has(x,"cfexclude")&&x.cfexclude}),function(x){if(_.contains(["reference","object"],x.type)){_.extendOwn(x,{referenceTable:x.table})}_.extendOwn(x,{table:w.table});return f.extend(x,{type:this.get("DB_TO_CF_TYPES")[x.type]})},this),filterFactoryConfig:f.extend(w.filterFactoryConfig,{dataTypeWidgets:w.dataTypeWidgets})})));this.model.set("filtersContainer",new l(f.extend(w.filtersContainerConfig,{filters:this.collection})));this.model.set("filtersControl",new k({mode:w.mode,url:w.url,table:w.table,categories:_.map(w.filterCategories,function(x){return{name:x}}),filters:this.collection}));this.model.get("filtersControl").on("fsc.ajax.error",function(y,x){this.trigger("columnfilters.ajax.error",y,x);this.$el.trigger("columnfilters.ajax.error",[y,x])},this);this.render()},render:function(){this.$el.empty();this.$el.append(f("<div />").addClass("panel panel-default").append(this.get("columnControl").$el,this.get("filtersContainer").$el,this.get("filtersControl").$el));return this.$el}});f.fn.ColumnFilters=function(y){var z,x,C,A,w=false,B;B={container:null,modalForm:null,columnControl:null,filtersContainer:null,filtersControl:null,notification:null};if(this.length&&_.isElement(this[0])){this.attr(f.fn.ColumnFilters.defaults.wrapperAttributes);B.container=this}else{B.container=f("<div />").attr(f.fn.ColumnFilters.defaults.wrapperAttributes)}if(_.has(y,"dataTypeWidgets")&&_.isArray(y.dataTypeWidgets)){for(z in y.dataTypeWidgets){if(_.isObject(y.dataTypeWidgets[z])&&_.has(y.dataTypeWidgets[z],"type")&&_.has(y.dataTypeWidgets[z],"widgets")){C=_.findWhere(f.fn.ColumnFilters.defaults.dataTypeWidgets,{type:y.dataTypeWidgets[z].type});if(C){for(x in y.dataTypeWidgets[z].widgets){C.widgets.push(y.dataTypeWidgets[z].widgets[x])}}}}}f.fn.ColumnFilters.defaults=f.extend(true,f.fn.ColumnFilters.defaults,_.omit(y,["dataTypeWidgets"]),B);A=new u(f.fn.ColumnFilters.defaults);B.container.append(A.$el);return A};f.fn.ColumnFilters.COLUMN_SELECTION_CONTROL_VIEW_TEMPLATE=['<div class="container-fluid">','<div class="navbar-header">','<button type="button" class="navbar-toggle collapsed" data-toggle="collapse" data-target="#cf-filter-select-tools" aria-expanded="false">','<span class="glyphicon glyphicon-menu-hamburger"></span>',"</button>","</div>",'<div class="collapse navbar-collapse" id="cf-filter-select-tools">','<form class="navbar-form navbar-left">','<fieldset class="cf-filter-select-tools">','<div class="form-group nav navbar-nav cf-filter-type-select">','<select class="form-control input-sm" autocomplete="off">','<option value="<%= $.fn.ColumnFilters.FilterSelectionTypes.DEFAULT %>"','<% if(config.filterSelectionType==$.fn.ColumnFilters.FilterSelectionTypes.DEFAULT) { %> selected="selected"<% } %>>Filter per Column</option>','<option value="<%= $.fn.ColumnFilters.FilterSelectionTypes.COMMON_VALUE %>"','<% if(config.filterSelectionType==$.fn.ColumnFilters.FilterSelectionTypes.COMMON_VALUE) { %> selected="selected"<% } %>>Common Filter</option>','<option value="<%= $.fn.ColumnFilters.FilterSelectionTypes.REFERENCE %>" disabled="disabled"','<% if(config.defaultSelectionType==$.fn.ColumnFilters.FilterSelectionTypes.REFERENCE) { %> selected="selected"<% } %>>Reference</option>',"</select>","</div>",'<div class="form-group nav navbar-nav cf-filter-type-select-column">','<select class="form-control input-sm" autocomplete="off">',"<% for(var i in config.columns) { %>",'<% if(!_.has(config.columns[i], "cfexclude") || (_.has(config.columns[i], "cfexclude") && !config.columns[i].cfexclude)) { %>','<option value="<%= config.columns[i].data %>"<% if(config.defaultSelectedColumnValue==config.columns[i].data) { %> selected="selected"<% } %>>',"<%= config.columns[i].title %>","</option>","<% } %>","<% } %>","</select>","</div>",'<div class="form-group nav navbar-nav cf-filter-type-select-common" style="display:none">','<select class="form-control input-sm" multiple="multiple" size="4" title="hold the ctrl key to add/remove a selected option" autocomplete="off">',"<% for(var i in config.commonColumns) { %>",'<option value="<%= config.commonColumns[i].data %>" data-type="<%= config.commonColumns[i].type %>"','<% if(_.has(config.commonColumns[i], "table")) { %> data-table="<%= config.commonColumns[i].table %>"<% } %>><%= config.commonColumns[i].title %>',"</option>","<% } %>","</select>","</div>",'<div class="cf-filter-factory-placeholder"></div>','<div class="form-group btn-toolbar cf-column-control-action-controls" role="toolbar">','<div class="btn-group" role="group" style="display:none">','<button type="button" class="btn btn-success btn-sm">Save</button>','<button type="button" class="btn btn-default btn-sm">Cancel</button>',"</div>",'<button type="button" class="btn btn-default btn-success btn-sm cf-add-column-filter-button" title="add column filter" disabled="disabled">','<span class="glyphicon glyphicon-plus"></span>',"</button>","</div>","</fieldset>","</form>","</div>","</div>"].join("");f.fn.ColumnFilters.FILTER_FACTORY_VIEW_TEMPLATE=["<% if(config.activeIndex>-1 && config.activeOperatorIndex>-1) { %>",'<%= _.template($.fn.ColumnFilters.WIDGET_OPERATOR_SELECT_TEMPLATE, {"variable":"config"})(config) %>',"<% } %>",'<div class="cf-data-type-control-container navbar-nav form-group"></div>'].join("");f.fn.ColumnFilters.WIDGET_OPERATOR_SELECT_TEMPLATE=['<select class="cf-widget-operator-select navbar-nav form-control input-sm">',"<% for(var i in config.dataTypeWidgets[config.activeIndex].widgets) { %>",'<option value="<%= config.dataTypeWidgets[config.activeIndex].widgets[i].getOperator() %>"',' data-index="<%= i %>"','<% if(config.activeOperatorIndex==i) { %> selected="selected"<% } %>>',"<%= config.dataTypeWidgets[config.activeIndex].widgets[i].getOperator() %>","</option>","<% } %>","</select>"].join("");f.fn.ColumnFilters.FILTERS_CONTAINER_VIEW_TEMPLATE=["<% if(config.filters.length) { %>",'<div class="cf-column-filters-list-container">','<ul class="nav nav-pills nav-stacked">',"<% var i=0; for(var f in config.groupedFilters) { %>",'<li role="presentation"<% if(i===config.activeColumnIndex) { %> class="active"<% } %>>','<a class="list-group-item" href="#cf-filters-column-<%= i %>" data-target="#cf-filters-column-<%= i %>" ','aria-controls="cf-filters-column-<%= i %>" role="pill" data-toggle="pill" data-column="<%= i++ %>">','<%= config.groupedFilters[f][0].label %> <span class="badge"><%= config.groupedFilters[f].length %></span>',"</a>","</li>","<% } %>","</ul>","</div>",'<div class="tab-content">',"<% var i=0; for(var f in config.groupedFilters) { %>",'<div role="tabpanel" class="tab-pane list-group<% if(i===config.activeColumnIndex) { %> active<% } %>" id="cf-filters-column-<%= i++ %>">',"<% for(var j in config.groupedFilters[f]) { %>",'<a href="#" class="list-group-item" data-filter="<%= config.groupedFilters[f][j].cid %>">','<p class="list-group-item-text">','<button class="close cf-filter-remove-button hidden" title="remove this filter">','<span class="glyphicon glyphicon-remove" aria-hidden="true"></span><span class="sr-only">Close</span>',"</button>","<% if(!_.isArray(config.groupedFilters[f][j].column)) { %>",'<button class="close cf-filter-edit-button hidden" title="edit this filter">','<span class="glyphicon glyphicon-cog" aria-hidden="true"></span><span class="sr-only">Edit</span>',"</button>","<% } %>",'<span class="label label-default"><%= config.groupedFilters[f][j].filterValue.operator %></span> ',"<% var columnLabel = _.isArray(config.groupedFilters[f][j].column) ? ",'["[",config.groupedFilters[f][j].column.join(", "),"]"].join("") : ',"config.groupedFilters[f][j].column %>","<%= config.groupedFilters[f][j].table %>.<%= columnLabel %> <%= config.groupedFilters[f][j].filterValue.description %>","</p>","</a>","<% } %>","</div>","<% } %>","</div>","<% } else { %>",'<p class="text-center text-muted"><em>There are no filters to display</em></p>',"<% } %>"].join("");f.fn.ColumnFilters.FILTER_SAVE_CONTROL_VIEW_TEMPLATE=['<div class="modal fade" tabindex="-1" role="dialog" aria-labelledby="save category or filter set" aria-hidden="true">','<div class="modal-dialog modal-lg">','<div class="modal-content">','<div class="modal-header">','<button type="button" class="close" data-dismiss="modal">','<span aria-hidden="true">&times;</span>','<span class="sr-only">Cancel</span>',"</button>",'<h4 class="modal-title"></h4>',"</div>",'<div class="modal-body"></div>','<div class="modal-footer">','<button type="button" class="btn btn-default" data-dismiss="modal">Close</button>','<button type="button" class="btn btn-primary" data-save-type="category">Save</button>',"</div>","</div>","</div>","</div>",'<div class="container-fluid">','<div class="navbar-header">','<button class="navbar-toggle" data-target="#cf-filter-save-controls" data-toggle="collapse" type="button" aria-expanded="true">','<span class="glyphicon glyphicon-menu-hamburger"></span>',"</button>","</div>",'<div id="cf-filter-save-controls" class="collapse navbar-collapse" aria-expanded="true">','<form class="navbar-form navbar-left">','<div class="form-group nav navbar-nav cf-fsc-save-filterset-buttongroup"<% if( config.controlMode!==$.fn.ColumnFilters.ControlModes.EDIT) { %> style="display:none"<% } %>>',"<fieldset>",'<div class="btn-group" role="group">','<button type="button" class="btn btn-default btn-xs">Cancel</button>','<button type="button" class="btn btn-success btn-xs">Done</button>',"</div>","</fieldset>","</div>","<% for(var i in config.categories) { ","var hasFilters = _.has(config.filtersets, config.categories[i].name), ","filterset = hasFilters ? config.filtersets[config.categories[i].name] : false; %>",'<ul class="nav navbar-nav" data-category-id="<%= config.categories[i].cid %>">','<li class="dropup btn btn-xs<% if(!hasFilters) { %> disabled<% } %>">','<a class="dropdown-toggle btn btn-xs<% if( config.controlMode===$.fn.ColumnFilters.ControlModes.EDIT) { %> disabled<% } %>" data-toggle="dropdown" href="#" aria-expanded="false">',"<%= config.categories[i].name %> ","<% if(hasFilters) { %>",'<span class="badge"><%= filterset.length %></span>',"<% } %>","</a>","<% if(hasFilters) { %>",'<ul class="dropdown-menu list-group cf-fsc-filter-set-menu" role="menu"><% for(var j in filterset) { %>','<li class="list-group-item">','<button type="button" class="close cf-fsc-filter-set-edit-button" title="edit this filter set" data-id="<%= filterset[j].cid %>">','<span class="glyphicon glyphicon-cog btn-sm"></span>',"</button>",'<button type="button" class="close cf-fsc-filter-set-remove-button" title="remove this filter set" data-id="<%= filterset[j].cid %>">','<span class="glyphicon glyphicon-remove btn-sm"></span>',"</button>",'<h4 class="list-group-item-heading" title="load filters from this filter set">','<a href="#" data-id="<%= filterset[j].cid %>"><%= filterset[j].name %></a>',"</h4>",'<p class="list-group-item-text"><%= filterset[j].description %></p>',"</li>","<% } %></ul>","<% } %>","</li>","</ul>","<% } %>","</form>",'<form class="navbar-form navbar-right">','<div class="form-group nav navbar-nav cf-fsc-clear-filterset-button">','<button class="btn btn-danger btn-xs" type="button" title="clear all working filters"','<% if(config.filters.length<1 || config.controlMode===$.fn.ColumnFilters.ControlModes.EDIT) { %> disabled="disabled"<% } %>',">",'<span class="glyphicon glyphicon-remove"></span>',"</button>","</div>",'<div class="col-sm-1"></div>','<div class="form-group nav navbar-nav cf-fsc-filter-category-menu">','<fieldset<% if(config.filters.length<1 || config.controlMode===$.fn.ColumnFilters.ControlModes.EDIT) { %> disabled="disabled"<% } %>>','<ul style="margin-bottom:0;padding-left:0">','<li class="dropup cf-save-filter-list-item" title="save">','<a href="#" class="dropdown-toggle btn btn-primary btn-xs" data-toggle="dropdown">','<span class="glyphicon glyphicon-floppy-disk"></span>','<span class="caret"></span>',"</a>",'<ul class="dropdown-menu" role="menu">','<li data-category-index="0">','<a href="#">','<span class="badge pull-right">','<span class="glyphicon glyphicon-plus"></span>',"</span> new category","</a>","</li>","<% for(var i in config.categories) { %>",'<li data-category-index="<%= config.categories[i].cid %>">','<a href="#">','<span class="badge pull-right">','<span class="glyphicon glyphicon-filter"></span>',"</span> <%= config.categories[i].name %>","</a>","</li>","<% } %>","</ul>","</li>","</ul>","</fieldset>","</div>","</form>","</div>","</div>"].join("");f.fn.ColumnFilters.NEW_FILTER_SET_FORM=['<form class="form-horizontal" role="form" data-save-type="filterset" data-category="<%= config.category %>">','<div class="form-group">','<label class="col-sm-2 control-label">Name</label>','<div class="col-sm-10">','<input type="text" class="form-control" placeholder="Name for this set of filters" autocomplete="off">',"</div>","</div>",'<div class="form-group">','<label class="col-sm-2 control-label">Description</label>','<div class="col-sm-10">','<textarea class="form-control" rows="3" autocomplete="off"></textarea>',"</div>","</div>","</form>"].join("");f.fn.ColumnFilters.NEW_CATEGORY_FORM=['<form class="form-horizontal" role="form" data-save-type="category">','<div class="form-group">','<label class="col-sm-2 control-label">Name</label>','<div class="col-sm-10">','<input type="text" class="form-control" placeholder="Name for this set of filters" autocomplete="off">',"</div>","</div>","</form>"].join("");f.fn.ColumnFilters.TEXT_TEMPLATE=['<input type="text" <%= _.map(_.omit(config.attributes, "type"), function(val,key){ return [key,\'="\',val,\'"\'].join("") }).join(" ") %> />'].join("");f.fn.ColumnFilters.TEXTAREA_TEMPLATE=['<textarea <%= _.map(_.omit(config.attributes, "type"), function(val,key){ return [key,\'="\',val,\'"\'].join("") }).join(" ") %>></textarea>'].join("");f.fn.ColumnFilters.NUMBER_SPINNER_TEMPLATE=['<div class="spinbox">','<input type="text" <%= _.map(_.omit(config.attributes, "type"), function(val,key){ return [key,\'="\',val,\'"\'].join("") }).join(" ") %> />','<div class="spinbox-buttons btn-group btn-group-vertical">','<button class="btn btn-default spinbox-up btn-xs">','<span class="glyphicon glyphicon-chevron-up"></span><span class="sr-only">Increase</span>',"</button>",'<button class="btn btn-default spinbox-down btn-xs">','<span class="glyphicon glyphicon-chevron-down"></span><span class="sr-only">Decrease</span>',"</button>","</div>","</div>"].join("");f.fn.ColumnFilters.NUMBER_BETWEEN_TEMPLATE=['<div class="form-group">','<div class="spinbox cf-fw-from-date pull-left">','<input type="text" <%= _.map(_.omit(config.attributes, "type"), function(val,key){ return [key,\'="\',val,\'"\'].join("") }).join(" ") %> />','<div class="spinbox-buttons btn-group btn-group-vertical">','<button class="btn btn-default spinbox-up btn-xs">','<span class="glyphicon glyphicon-chevron-up"></span><span class="sr-only">Increase</span>',"</button>",'<button class="btn btn-default spinbox-down btn-xs">','<span class="glyphicon glyphicon-chevron-down"></span><span class="sr-only">Decrease</span>',"</button>","</div>","</div>",'<div class="input-group-addon col-sm-1 pull-left"></div>','<div class="spinbox cf-fw-to-date pull-left">','<input type="text" <%= _.map(_.omit(config.attributes, "type"), function(val,key){ return [key,\'="\',val,\'"\'].join("") }).join(" ") %> />','<div class="spinbox-buttons btn-group btn-group-vertical">','<button class="btn btn-default spinbox-up btn-xs">','<span class="glyphicon glyphicon-chevron-up"></span><span class="sr-only">Increase</span>',"</button>",'<button class="btn btn-default spinbox-down btn-xs">','<span class="glyphicon glyphicon-chevron-down"></span><span class="sr-only">Decrease</span>',"</button>","</div>","</div>","</div>"].join("");f.fn.ColumnFilters.NUMBER_LIST_TEMPLATE=['<div class="form-group pull-left">','<div class="spinbox">','<input type="text" <%= _.map(_.omit(config.attributes, "type"), function(val,key){ return [key,\'="\',val,\'"\'].join("") }).join(" ") %> />','<div class="spinbox-buttons btn-group btn-group-vertical">','<button class="btn btn-default spinbox-up btn-xs">','<span class="glyphicon glyphicon-chevron-up"></span><span class="sr-only">Increase</span>',"</button>",'<button class="btn btn-default spinbox-down btn-xs">','<span class="glyphicon glyphicon-chevron-down"></span><span class="sr-only">Decrease</span>',"</button>","</div>","</div>","</div>",'<div class="col-sm-1"></div>','<div class="form-group pull-left">','<div class="btn-group">','<button type="button" class="btn btn-default btn-sm cf-fw-numberList-btn-add" title="add number">','<span class="glyphicon glyphicon-plus"></span> <span class="badge"><%= config.numbers.length %></span>',"</button>",'<button type="button" class="btn btn-default btn-sm dropdown-toggle<% if(config.numbers.length<1) { %> disabled<% } %>" data-toggle="dropdown" aria-expanded="false">','<span class="caret"></span>','<span class="sr-only">Toggle Dropdown</span>',"</button>",'<ul class="dropdown-menu list-group list-unstyled cf-select-widget-list" role="menu">',"<% for(var i=0; i<config.numbers.length; i++) { %>",'<li class="list-group-item" data-cid="<%= config.numbers.at(i).cid %>" style="padding:0 10px">','<button class="close" data-cid="<%= config.numbers.at(i).cid %>"><span class="glyphicon glyphicon-remove btn-sm"></span></button>','<p class="list-group-item-heading"><%= config.numbers.at(i).get("number") %></p>',"</li>","<% } %>","</ul>","</div>","</div>"].join("");f.fn.ColumnFilters.DATEPICKER_TEMPLATE=['<div class="input-group date">','<input type="text" <%= _.map(_.omit(config.attributes, "type"), function(val,key){ return [key,\'="\',val,\'"\'].join("") }).join(" ") %> />','<span class="input-group-addon">','<span class="glyphicon glyphicon-calendar"></span>',"</span>","</div>"].join("");f.fn.ColumnFilters.DATEPICKER_BETWEEN_TEMPLATE=['<div class="input-daterange input-group date">','<input type="text" <%= _.map(_.omit(config.fromAttributes, "type"), function(val,key){ return [key,\'="\',val,\'"\'].join("") }).join(" ") %> />','<span class="input-group-addon">to</span>','<input type="text" <%= _.map(_.omit(config.toAttributes, "type"), function(val,key){ return [key,\'="\',val,\'"\'].join("") }).join(" ") %> />',"</div>"].join("");f.fn.ColumnFilters.DATE_LIST_TEMPLATE=['<div class="form-group pull-left">','<div class="input-group date">','<input type="text" <%= _.map(_.omit(config.attributes, "type"), function(val,key){ return [key,\'="\',val,\'"\'].join("") }).join(" ") %> />','<span class="input-group-addon">','<span class="glyphicon glyphicon-calendar"></span>',"</span>","</div>","</div>",'<div class="col-sm-1"></div>','<div class="form-group pull-left">','<div class="btn-group">','<button type="button" class="btn btn-default btn-sm cf-fw-numberList-btn-add" title="add date">','<span class="glyphicon glyphicon-plus"></span> <span class="badge"><%= config.dates.length %></span>',"</button>",'<button type="button" class="btn btn-default btn-sm dropdown-toggle<% if(config.dates.length<1) { %> disabled<% } %>" data-toggle="dropdown" aria-expanded="false">','<span class="caret"></span>','<span class="sr-only">Toggle Dropdown</span>',"</button>",'<ul class="dropdown-menu list-group list-unstyled cf-select-widget-list" role="menu">',"<% for(var i=0; i<config.dates.length; i++) { %>",'<li class="list-group-item" data-cid="<%= config.dates.at(i).cid %>" style="padding:0 10px">','<button class="close" data-cid="<%= config.dates.at(i).cid %>"><span class="glyphicon glyphicon-remove btn-sm"></span></button>','<p class="list-group-item-heading"><%= moment.utc(config.dates.at(i).get("date")).format("M/D/YYYY") %></p>',"</li>","<% } %>","</ul>","</div>","</div>"].join("");var s=Backbone.View.extend({enable:function(){f("fieldset.cf-filter-select-tools",this.$el).removeAttr("disabled","disabled");return this},disable:function(){f("fieldset.cf-filter-select-tools",this.$el).attr("disabled","disabled");return this},displayColumnSelectControl:function(y){var x,w,z;this.model.set("filterSelectionType",y);switch(this.model.get("filterSelectionType")){case f.fn.ColumnFilters.FilterSelectionTypes.DEFAULT:f("div.cf-filter-type-select-common",this.$el).hide();f("div.cf-filter-type-select-column",this.$el).show();this.model.set("activeColumn",_.findWhere(this.model.get("columns"),{data:f("div.cf-filter-type-select-column select",this.$el).val()}));if(this.model.get("activeColumn")){this.showFilterType(this.model.get("activeColumn").type)}break;case f.fn.ColumnFilters.FilterSelectionTypes.COMMON_VALUE:f("div.cf-filter-type-select-column",this.$el).hide();f("div.cf-filter-type-select-common",this.$el).show();x=f("div.cf-filter-type-select-common select",this.$el).val();if(x&&x.length){w=_.findWhere(this.model.get("columns"),{data:x[0]});if(w){this.showFilterType(w.type);this.model.set("activeColumn",_.filter(this.model.get("columns"),function(A){return _.contains(x,A.data)},this))}else{f("button.cf-add-column-filter-button",this.$el).attr("disabled","disabled")}}else{f("button.cf-add-column-filter-button",this.$el).attr("disabled","disabled");this.model.get("filterFactory").reset().hide()}break;case"reference":f("div.cf-filter-type-select-common",this.$el).hide();f("div.cf-filter-type-select-column",this.$el).hide();break}return this},enableColumnsByType:function(y,x){if(y){f("button.cf-add-column-filter-button",this.$el).removeAttr("disabled");var w=_.filter(this.model.get("commonColumns"),function(z){return _.contains(y,z.data)},this);f("option",f("div.cf-filter-type-select-common select",this.$el)).each(function(z,A){if(f(A).data("type")!==x){f(A).attr("disabled","disabled").addClass("disabled")}else{if(_.contains(["biglist","enum"],f(A).data("type"))){if(_.contains(_.pluck(w,"table"),f(A).data("table"))){f(A).removeAttr("disabled").removeClass("disabled")}else{f(A).attr("disabled","disabled").addClass("disabled")}}else{f(A).removeAttr("disabled").removeClass("disabled")}}});this.model.set("activeColumn",_.filter(this.model.get("columns"),function(z){return _.contains(y,z.data)},this));this.showFilterType(x)}else{f("option",f("div.cf-filter-type-select-common select",this.$el)).removeAttr("disabled").removeClass("disabled");f("button.cf-add-column-filter-button",this.$el).attr("disabled","disabled");this.model.set("activeColumn",null);this.model.get("filterFactory").reset().hide()}return this},showFilterType:function(y,x){var w=this.model.get("filterFactory").activeType(),z=this.model.get("filterFactory").activeType(y,x);if(z){f("button.cf-add-column-filter-button",this.$el).removeAttr("disabled");switch(y){case"number":this.model.get("filterFactory").configureNumberWidget(this.model.get("activeColumn").data,x);break;case"boolean":this.model.get("filterFactory").configureBooleanWidget(this.model.get("activeColumn").data);break;case"enum":this.model.get("filterFactory").configureEnumWidget(this.model.get("activeColumn").referenceTable,this.model.get("activeColumn").data);break;case"biglist":this.model.get("filterFactory").configureBiglistWidget(this.model.get("activeColumn").referenceTable,this.model.get("activeColumn").data);break}this.model.get("filterFactory").show()}else{this.model.get("filterFactory").hide()}return this},activeColumn:function(){var w=this.model.get("activeColumn");if(w){switch(this.model.get("filterSelectionType")){case f.fn.ColumnFilters.FilterSelectionTypes.DEFAULT:return w.data;break;case f.fn.ColumnFilters.FilterSelectionTypes.COMMON_VALUE:return _.pluck(w,"data");break}}else{return false}},activeLabel:function(){var w=this.model.get("activeColumn");if(w){switch(this.model.get("filterSelectionType")){case f.fn.ColumnFilters.FilterSelectionTypes.DEFAULT:return w.title;break;case f.fn.ColumnFilters.FilterSelectionTypes.COMMON_VALUE:return _.pluck(w,"title");break}}else{return false}},loadFilter:function(w){var x=_.findWhere(this.model.get("columns"),{data:w.get("column")});if(x){this.model.set("activeColumn",x);f("div.cf-filter-type-select-column select",this.$el).val(x.data);this.showFilterType(w.get("type"),w.get("filterValue").operator).model.get("filterFactory").loadFilter(w);this.model.set("cachedFilter",w)}},changeMode:function(w){if(_.isFinite(w)&&this.model.get("mode")!==_.identity(w*1)){this.model.set("mode",w*1)}return this},modeChangeHandler:function(w,x,y){switch(this.model.get("mode")){case f.fn.ColumnFilters.ControlModes.NORMAL:this.enable();f(["div.cf-filter-type-select select","div.cf-filter-type-select-column select","div.cf-filter-type-select-common select","button.cf-add-column-filter-button"].join(", "),this.$el).removeAttr("disabled");f("button.cf-add-column-filter-button",this.$el).show();f("div.cf-column-control-action-controls div.btn-group",this.$el).hide();break;case f.fn.ColumnFilters.ControlModes.EDIT:f(["div.cf-filter-type-select select","div.cf-filter-type-select-column select","div.cf-filter-type-select-common select","button.cf-add-column-filter-button"].join(", "),this.$el).attr("disabled","disabled");f("button.cf-add-column-filter-button",this.$el).hide();f("div.cf-column-control-action-controls div.btn-group",this.$el).show();break;case f.fn.ColumnFilters.ControlModes.DISABLED:this.disable();break}},template:_.template(f.fn.ColumnFilters.COLUMN_SELECTION_CONTROL_VIEW_TEMPLATE,{variable:"config"}),events:{"change div.cf-filter-type-select select":function(w){this.displayColumnSelectControl(f(w.currentTarget).val()*1)},"change div.cf-filter-type-select-common select":function(w){this.enableColumnsByType(f(w.currentTarget).val(),f(":selected",f(w.currentTarget)).data("type"))},"change div.cf-filter-type-select-column select":function(y){this.model.set("activeColumn",_.findWhere(this.model.get("columns"),{data:f(y.currentTarget).val()}));var x=this.model.get("activeColumn").type,w=this.model.get("filterFactory").activeType(),z=x===w?this.model.get("filterFactory").getActiveWidget().getOperator():undefined;this.showFilterType(this.model.get("activeColumn").type,z)},"cf.fw.submit":function(x,y){var w=this.model.get("filterFactory").getActiveWidget();if(w){switch(this.model.get("mode")){case f.fn.ColumnFilters.ControlModes.EDIT:this.model.get("cachedFilter").set({column:this.model.get("activeColumn").data,label:this.model.get("activeColumn").title,table:this.model.get("activeColumn").table,type:this.model.get("activeColumn").type,filterValue:y});this.$el.trigger("cc.filter.save",[this.model.get("cachedFilter")]);break;case f.fn.ColumnFilters.ControlModes.NORMAL:this.$el.trigger("cc.filter.add",[{column:this.activeColumn(),label:this.activeLabel(),table:this.model.get("activeColumn").table,type:this.model.get("activeColumn").type,filterValue:y}]);break}}},"click button.cf-add-column-filter-button":function(x){var w=this.model.get("filterFactory").getActiveWidget(),y=w?w.get():false;if(w&&y){switch(this.model.get("filterSelectionType")){case f.fn.ColumnFilters.FilterSelectionTypes.COMMON_VALUE:this.$el.trigger("cc.filter.add",[{column:this.activeColumn(),label:this.activeLabel().join(", "),table:this.model.get("activeColumn")[0].table,type:this.model.get("activeColumn")[0].type,filterValue:y}]);break;case f.fn.ColumnFilters.FilterSelectionTypes.DEFAULT:this.$el.trigger("cc.filter.add",[{column:this.activeColumn(),label:this.activeLabel(),table:this.model.get("activeColumn").table,type:this.model.get("activeColumn").type,filterValue:y}]);break}}},"click div.cf-column-control-action-controls div.btn-group button.btn-success":function(x){var w=this.model.get("filterFactory").getActiveWidget(),y=w?w.get():false;if(w&&y){this.model.get("cachedFilter").set({column:this.activeColumn(),label:this.activeLabel(),table:this.model.get("activeColumn").table,type:this.model.get("activeColumn").type,filterValue:y});this.$el.trigger("cc.filter.save",[this.model.get("cachedFilter")])}},"click div.cf-column-control-action-controls div.btn-group button.btn-default":function(w){this.$el.trigger("cc.filter-cancel.click")}},tagName:"nav",className:"navbar navbar-default cf-column-select-control",initialize:function(H){this.version="1.0.2";this.model=new Backbone.Model(f.extend(_.omit(H,"filterFactoryConfig"),{activeColumn:null,cachedFilter:null}));this.model.on("change:mode",this.modeChangeHandler,this);var A,z,F,B,E=[],D,G=_.groupBy(_.reject(this.model.get("columns"),function(w){_.has(w,"cfexclude")&&w.cfexclude}),"type"),x,C,y=[];for(A in G){if(G[A].length>1){if(_.contains(["biglist","enum"],A)){D=_.groupBy(G[A],function(w){return w.table});for(z in D){if(D[z].length>1){f.merge(E,D[z])}}}else{f.merge(E,G[A])}}}this.model.set("commonColumns",E);switch(this.model.get("filterSelectionType")){case f.fn.ColumnFilters.FilterSelectionTypes.DEFAULT:if(!this.model.get("defaultSelectedColumnValue")){F=this.model.get("columns")[0]}else{F=_.findWhere(this.model.get("columns"),{data:this.model.get("defaultSelectedColumnValue")})}H.filterFactoryConfig.activeType=F.type;this.model.set("activeColumn",F);break}this.model.set("filterFactory",new n(f.extend(H.filterFactoryConfig,{numberColumns:_.filter(H.columns,function(w){return w.type==="number"}),booleanColumns:_.filter(H.columns,function(w){return w.type==="boolean"}),enumColumns:_.filter(H.columns,function(w){return w.type==="enum"}),biglistColumns:_.filter(H.columns,function(w){return w.type==="biglist"})})));this.model.get("filterFactory").hide().$el.addClass("form-group nav navbar-nav");this.render()},render:function(){this.$el.empty().append(this.template(this.model.toJSON()));f("div.cf-filter-factory-placeholder",this.$el).replaceWith(this.model.get("filterFactory").render());if(this.model.get("defaultSelectedCommonValues").length){var w=_.filter(this.model.get("commonColumns"),function(z){return _.contains(this.model.get("defaultSelectedCommonValues"),z.data)},this),x=_.countBy(w,function(z){return z.type}),y=_.toArray(x);if(y.length===1){f("div.cf-filter-type-select-common select",this.$el).val(this.model.get("defaultSelectedCommonValues"));this.enableColumnsByType(w[0].type);this.displayColumnSelectControl(f.fn.ColumnFilters.FilterSelectionTypes.COMMON_VALUE)}}else{if(this.model.get("defaultSelectedColumnValue")){f("div.cf-filter-type-select-column select",this.$el).val(this.model.get("defaultSelectedColumnValue"));this.displayColumnSelectControl(f.fn.ColumnFilters.FilterSelectionTypes.DEFAULT)}else{this.displayColumnSelectControl(this.model.get("filterSelectionType"))}}this.modeChangeHandler(this.model,this.model.get("mode"),{});return this.$el}});var k=Backbone.View.extend({enable:function(){this.changeMode(f.fn.ColumnFilters.ControlModes.NORMAL);return this},disable:function(){this.changeMode(f.fn.ColumnFilters.ControlModes.DISABLED);return this},addCategory:function(w){if(this.categories.where({name:w}).length<1){this.categories.add({name:w})}return this},loadFilters:function(x){var w=this.collection.get(x);this.filters.reset(w.get("filters"));return this},changeMode:function(w){if(_.isFinite(w)&&this.model.get("controlMode")!==_.identity(w*1)){this.model.set("controlMode",w*1)}return this},modeChangeHandler:function(w,x,y){this.filters.trigger("update")},events:{"click li.cf-save-filter-list-item ul.dropdown-menu li":function(y){var w=f(y.currentTarget).data("category-index"),x=Boolean(w===0);if(x){f("h4.modal-title",this.$el).html("Create New Category");f("div.modal-footer button:last-child",this.$el).html("Create");f("div.modal-body",this.$el).empty().append(_.template(f.fn.ColumnFilters.NEW_CATEGORY_FORM)({}))}else{f("h4.modal-title",this.$el).html("Save to Filter Set");f("div.modal-footer button:last-child",this.$el).html("Save");f("div.modal-body",this.$el).empty().append(_.template(f.fn.ColumnFilters.NEW_FILTER_SET_FORM,{variable:"config"})({category:this.categories.get(w).get("name")}))}f("div.modal",this.$el).modal("show")},"click div.cf-fsc-clear-filterset-button button":function(w){this.filters.reset()},"click div.modal-footer button:last-child":function(y){var A=f("div.modal-body form",this.$el).data("save-type"),w,z,x;switch(A){case"filterset":w=f.trim(f("div.modal-body form input",this.$el).val());z=f.trim(f("div.modal-body form textarea",this.$el).val());x=f("div.modal-body form",this.$el).data("category");if(w.length){this.disable();this.collection.create({category:x,table:this.model.get("table"),name:w,description:z.length?z:null,filters:this.filters.clone().toJSON(),error:function(B,D,C){this.trigger("fsc.ajax.error",D,B);this.$el.trigger("fsc.ajax.error",[D,B])}})}break;case"category":w=f.trim(f("div.modal-body form input",this.$el).val());if(w.length){this.addCategory(w)}break}},"click ul.cf-fsc-filter-set-menu li button.cf-fsc-filter-set-remove-button":function(x){if(confirm("Are you sure you want to remove this Filter Set?")){var w=this.collection.get(f(x.currentTarget).data("id"));this.disable();w.destroy({sucess:function(y,A,z){},error:function(y,A,z){this.trigger("fsc.ajax.error",A,y);this.$el.trigger("fsc.ajax.error",[A,y])}});this.collection.remove(f(x.currentTarget).data("id"))}},"click ul.cf-fsc-filter-set-menu li button.cf-fsc-filter-set-edit-button":function(w){this.loadFilters(f(w.currentTarget).data("id"));this.model.set("editingFilterSet",this.collection.get(f(w.currentTarget).data("id")));this.changeMode(f.fn.ColumnFilters.ControlModes.EDIT)},"click ul.cf-fsc-filter-set-menu li h4 a":function(w){this.loadFilters(f(w.currentTarget).data("id"))},"click div.cf-fsc-save-filterset-buttongroup button:first-child":function(w){this.changeMode(f.fn.ColumnFilters.ControlModes.NORMAL)},"click div.cf-fsc-save-filterset-buttongroup button:last-child":function(w){if(this.filters.length){this.disable();this.model.get("editingFilterSet").save({filters:this.filters.toJSON(),error:function(x,z,y){this.trigger("fsc.ajax.error",z,x);this.$el.trigger("fsc.ajax.error",[z,x])}});this.changeMode(f.fn.ColumnFilters.ControlModes.NORMAL)}}},tagName:"nav",className:"navbar navbar-default cf-filter-save-control",initialize:function(w){this.version="1.0.1";this.model=new Backbone.Model(f.extend({mode:f.fn.ColumnFilters.Modes.DEFAULT,url:undefined,table:undefined},_.omit(w,["filters","categories"]),{controlMode:f.fn.ColumnFilters.ControlModes.NORMAL,editingFilterSet:null}));this.model.on("change:controlMode",this.modeChangeHandler,this);this.filters=w.filters;if(_.contains([f.fn.ColumnFilters.Modes.CATEGORY_SETS,f.fn.ColumnFilters.Modes.CATEGORIES_NO_TYPES],this.model.get("mode"))){this.categories=new Backbone.Collection(w.categories,{model:Backbone.Model.extend({defaults:{name:undefined}})});this.collection=new Backbone.Collection([],{model:Backbone.Model.extend({defaults:{category:null,table:null,name:null,description:null,filters:null}})});this.filters.on("update reset",this.render,this);this.categories.on("update reset",this.render,this);this.collection.on("update reset",this.render,this);if(w.url){this.collection.url=w.url;this.collection.on("sync",function(x,z,y){this.enable()},this);this.collection.on("request",function(x,z,y){this.disable()},this);this.collection.on("error",function(x,z,y){this.trigger("fsc.ajax.error",z,x);this.$el.trigger("fsc.ajax.error",[z,x])},this);this.collection.fetch({context:this,remove:false,data:{table:w.table},success:function(x,C,A){var y,z=this.categories.pluck("name"),B=_.keys(_.groupBy(x.toJSON(),"category"));for(y in B){if(!_.contains(z,B[y])){z.push(B[y])}}this.categories.reset(_.map(z,function(D){return{name:D}}))},error:function(x,z,y){this.trigger("fsc.ajax.error",z,x);this.$el.trigger("fsc.ajax.error",[z,x])}})}else{this.render()}}},render:function(w,y){if(_.contains([f.fn.ColumnFilters.Modes.CATEGORY_SETS,f.fn.ColumnFilters.Modes.CATEGORIES_NO_TYPES],this.model.get("mode"))){var x=f.extend(this.model.toJSON(),{filters:_.map(this.filters.models,function(z){return f.extend(z.toJSON(),{cid:z.cid})}),categories:_.map(this.categories.models,function(z){return f.extend(z.toJSON(),{cid:z.cid})}),filtersets:_.groupBy(_.map(this.collection.models,function(z){return f.extend(z.toJSON(),{cid:z.cid})}),"category")});this.$el.empty().append(_.template(f.fn.ColumnFilters.FILTER_SAVE_CONTROL_VIEW_TEMPLATE,{variable:"config"})(x));f("div.modal",this.$el).modal({backdrop:"static",keyboard:false,show:false})}else{this.$el.empty()}}});var n=Backbone.View.extend({show:function(){this.$el.show();return this},hide:function(){this.$el.hide();return this},reset:function(){var A,x,w,z,y,B=this.model.get("dataTypeWidgets");A=this.getActiveWidget();if(A){A.reset().hide()}this.model.set("activeType",B[0].type);x=this.model.get("activeType");this.model.set("activeIndex",_.findIndex(B,function(C){return C.type===x},this));w=this.model.get("activeIndex");this.model.set("activeOperator",B[0].widgets[0].getOperator());z=this.model.get("activeOperator");this.model.set("activeOperatorIndex",_.findIndex(B[w].widgets,function(C){return C.getOperator()===z},this));y=this.model.get("activeOperatorIndex");f("select.cf-widget-operator-select",this.$el).replaceWith(_.template(f.fn.ColumnFilters.WIDGET_OPERATOR_SELECT_TEMPLATE,{variable:"config"})(this.model.toJSON()));this.getActiveWidget().reset().show();return this},configureEnumWidget:function(x,w){var y=this.getWidget("enum","equals");if(y){y.useDatasource(x,w)}return this},configureBiglistWidget:function(y,x){var w=this.getWidget("biglist","equals");if(w){w.useDatasource(y,x)}return this},configureBooleanWidget:function(x){var w=this.getWidget("boolean","equals");if(w){w.useDatasource(x)}return this},configureNumberWidget:function(A,w){var x,y=[],z=_.findWhere(this.model.get("dataTypeWidgets"),{type:"number"});if(z){for(x in z.widgets){z.widgets[x].useDatasource(A)}}return this},getWidget:function(z,x){var y,w,A,C=false,B=this.model.get("dataTypeWidgets");w=_.findWhere(B,{type:z});if(w){for(y in w.widgets){A=w.widgets[y];if(A.getOperator()===x){C=true;break}}return C?A:false}else{return false}},getActiveWidget:function(){var w=this.model.get("activeIndex"),x=this.model.get("activeOperatorIndex"),y=false;if(w>-1&&x>-1){y=this.model.get("dataTypeWidgets")[w].widgets[x]}else{if(w>-1){y=this.model.get("dataTypeWidgets")[w].widgets[0]}}return y},activeType:function(B,y){var D=this.model.get("dataTypeWidgets"),x,w=-1,A,z=-1,C;if(B===this.model.get("activeType")){C=this.getActiveWidget();if(C){C.hide()}w=this.model.get("activeIndex");if(y){this.model.set("activeOperator",y);A=this.model.get("activeOperator");this.model.set("activeOperatorIndex",_.findIndex(D[w].widgets,function(E){return E.getOperator()===A},this));f("select.cf-widget-operator-select",this.$el).val(A)}C=this.getActiveWidget();if(C){C.show()}return C}if(B){if(_.contains(_.pluck(D,"type"),B)){C=this.getActiveWidget();if(C){C.hide()}this.model.set("activeType",B);x=this.model.get("activeType");this.model.set("activeIndex",_.findIndex(D,function(E){return E.type===x},this));w=this.model.get("activeIndex");if(y&&_.contains(_.invoke(D[w].widgets,"getOperator"),y)){this.model.set("activeOperator",y);A=this.model.get("activeOperator");this.model.set("activeOperatorIndex",_.findIndex(D[w].widgets,function(E){return E.getOperator()===A},this));z=this.model.get("activeOperatorIndex")}else{this.model.set("activeOperator",D[0].widgets[0].getOperator());A=this.model.get("activeOperator");this.model.set("activeOperatorIndex",_.findIndex(D[w].widgets,function(E){return E.getOperator()===A},this))}}if(w>-1){f("select.cf-widget-operator-select",this.$el).replaceWith(_.template(f.fn.ColumnFilters.WIDGET_OPERATOR_SELECT_TEMPLATE,{variable:"config"})(this.model.toJSON()));C=this.getActiveWidget();if(C){C.show()}return C}else{return false}}else{return this.model.get("activeType")}},loadFilter:function(w){var x=this.activeType(w.get("type"),w.get("filterValue").operator);if(x){x.set(w.get("filterValue"))}return this},versions:function(){var B=_.keys(_.groupBy(this.model.get("dataTypeWidgets"),"type")),w={},y,x,A,z;for(y in B){A=_.findWhere(this.model.get("dataTypeWidgets"),{type:B[y]});z=[];for(x in A.widgets){z.push(_.createKeyValueObject(A.widgets[x].getOperator(),A.widgets[x].version))}f.extend(w,_.createKeyValueObject(B[y],z))}return{FilterFactory:this.version,"Data Type Widgets":w}},template:_.template(f.fn.ColumnFilters.FILTER_FACTORY_VIEW_TEMPLATE,{variable:"config"}),events:{"change select.cf-widget-operator-select":function(x){var w=this.getActiveWidget();if(w){w.hide()}this.model.set("activeOperator",f(x.currentTarget).val());this.model.set("activeOperatorIndex",f("option:selected",f(x.currentTarget)).data("index")*1);this.getActiveWidget().show();if(this.activeType()==="number"){this.configureNumberWidget(this.getActiveWidget().model.get("currentDatasource").get("data"),this.getActiveWidget().getOperator())}}},className:"cf-filter-factory",initialize:function(y){this.version="1.0.2";this.model=new Backbone.Model(f.extend({enumColumns:[],biglistColumns:[],booleanColumns:[],numberColumns:[]},y));var z,x,w,A,B=this.model.get("dataTypeWidgets");if(!this.model.get("activeType")){this.model.set("activeType",B[0].type)}x=this.model.get("activeType");this.model.set("activeIndex",_.findIndex(B,function(C){return C.type===x},this));w=this.model.get("activeIndex");if(!this.model.get("activeOperator")){w=this.model.get("activeIndex");this.model.set("activeOperator",B[w].widgets[0].getOperator());A=this.model.get("activeOperator");this.model.set("activeOperatorIndex",_.findIndex(B[w].widgets,function(C){return C.getOperator()===A},this))}else{A=this.model.get("activeOperator");this.model.set("activeOperatorIndex",_.findIndex(B[w].widgets,function(C){return C.getOperator()===A},this))}x=_.findWhere(B,{type:"enum"});if(x&&this.model.get("enumColumns").length){for(z in x.widgets){x.widgets[z].addDatasource(this.model.get("enumColumns"))}}x=_.findWhere(B,{type:"biglist"});if(x&&this.model.get("biglistColumns").length){for(z in x.widgets){x.widgets[z].addDatasource(this.model.get("biglistColumns"))}}x=_.findWhere(B,{type:"boolean"});if(x&&this.model.get("booleanColumns").length){for(z in x.widgets){x.widgets[z].addDatasource(this.model.get("booleanColumns"))}}x=_.findWhere(B,{type:"number"});if(x&&this.model.get("numberColumns").length){for(z in x.widgets){x.widgets[z].addDatasource(this.model.get("numberColumns"))}}},render:function(){this.$el.empty().append(this.template(this.model.toJSON()));var y,x,w;for(x in this.model.get("dataTypeWidgets")){for(w in this.model.get("dataTypeWidgets")[x].widgets){y=this.model.get("dataTypeWidgets")[x].widgets[w];y.hide();f("div.cf-data-type-control-container",this.$el).append(y.$el)}}y=this.getActiveWidget();if(y){y.show()}return this.$el}});var l=Backbone.View.extend({enable:function(){this.$el.removeAttr("disabled");f(["ul.nav li","div.tab-pane a.list-group-item","ul.nav li a.list-group-item"].join(","),this.$el).removeClass("disabled");f("div.tab-pane a p button",this.$el).show();return this},disable:function(){this.$el.attr("disabled","disabled");f(["ul.nav li","div.tab-pane a.list-group-item","ul.nav li a.list-group-item"].join(","),this.$el).addClass("disabled");f("div.tab-pane a p button",this.$el).hide();return this},activeColumnIndex:function(w){this.model.set("activeColumnIndex",_.indexOf(this.collection.models,this.collection.findWhere({column:w})));return this.model.get("activeColumnIndex")},template:_.template(f.fn.ColumnFilters.FILTERS_CONTAINER_VIEW_TEMPLATE,{variable:"config"}),events:{"shown.bs.tab":function(w){this.model.set("activeColumnIndex",f(w.target).data("column"))},"mouseover div.tab-pane a":function(w){f("button",f(w.currentTarget)).removeClass("hidden")},"mouseleave div.tab-pane a":function(w){f("button",f(w.currentTarget)).addClass("hidden")},"click button.cf-filter-remove-button":function(w){this.$el.trigger("fc.filter-remove.click",[f(w.currentTarget).parent().parent().data("filter")])},"click button.cf-filter-edit-button":function(w){this.$el.trigger("fc.filter-edit.click",[f(w.currentTarget).parent().parent().data("filter")])}},tagName:"fieldset",className:"panel-body cf-data-filters-container",initialize:function(w){this.version="1.0.1";this.model=new Backbone.Model(f.extend(_.omit(w,"filters")));this.collection=w.filters;this.collection.on("update reset",function(x,y){if(this.collection.length){if(this.model.get("activeColumnIndex")>=this.collection.length){this.model.set("activeColumnIndex",0)}}this.render()},this);this.render()},render:function(){var y,A,w,x,z;if(this.model.get("activeColumnIndex")<0&&this.collection.length){this.model.set("activeColumnIndex",0)}y={filters:this.collection,groupedFilters:_.groupBy(_.map(this.collection.models,function(B){return f.extend(B.toJSON(),{cid:B.cid})}),"column"),activeColumnIndex:this.model.get("activeColumnIndex")};this.$el.empty().append(this.template(y));if(this.collection.length){z=f(['ul.nav li a[data-column="',this.model.get("activeColumnIndex"),'"]'].join(""),this.$el)}return this.$el}});var q=Backbone.View.extend({show:function(){this.$el.show();return this},hide:function(){this.$el.hide();return this},enable:function(){this.$el.removeAttr("disabled");return this},disable:function(){this.$el.attr("disabled","disabled");return this},get:function(){var w=f.trim(f("input",this.$el).val());if(w.length){return{operator:this.getOperator(),value:w,description:["is equal to",w].join(" ")}}else{return false}},set:function(w){f("input",this.$el).val(w.value);return this},reset:function(){f("input",this.$el).val(null);return this},getOperator:function(){return this.model.get("operator")},template:_.template(f.fn.ColumnFilters.TEXT_TEMPLATE,{variable:"config"}),events:{"keyup input":function(x){if(x.keyCode===13){var w=this.get();if(w){this.$el.trigger("cf.fw.submit",[w])}}}},tagName:"fieldset",className:"cf-filter-widget",initialize:function(w){this.version="1.0.5";this.model=new Backbone.Model(f.extend({attributes:{"class":"form-control input-sm",autocomplete:"off",placeholder:"is equal to value",size:"25"}},w,{operator:"equals"}));this.render()},render:function(){this.$el.empty().append(this.template(this.model.toJSON()));return this.$el}});var r=Backbone.View.extend({show:function(){this.$el.show();return this},hide:function(){this.$el.hide();return this},enable:function(){this.$el.removeAttr("disabled");return this},disable:function(){this.$el.attr("disabled","disabled");return this},get:function(){var w=f.trim(f("input",this.$el).val());if(w.length){return{operator:this.getOperator(),value:w,description:["is like",w].join(" ")}}else{return false}},set:function(w){f("input",this.$el).val(w.value);return this},reset:function(){f("input",this.$el).val(null);return this},getOperator:function(){return this.model.get("operator")},template:_.template(['<input type="text" <%= _.map(_.omit(config.attributes, "type"), function(val,key){ return [key,\'="\',val,\'"\'].join("") }).join(" ") %> />'].join(""),{variable:"config"}),events:{"keyup input":function(x){if(x.keyCode===13){var w=this.get();if(w){this.$el.trigger("cf.fw.submit",[w])}}}},tagName:"fieldset",className:"cf-filter-widget",initialize:function(w){this.version="1.0.3";this.model=new Backbone.Model(f.extend({attributes:{"class":"form-control input-sm",autocomplete:"off",placeholder:"is similar to value",size:"25"}},w,{operator:"search"}));this.render()},render:function(){this.$el.empty().append(this.template(this.model.toJSON()));return this.$el}});var h=Backbone.View.extend({show:function(){this.$el.show();return this},hide:function(){this.$el.hide();return this},enable:function(){this.$el.removeAttr("disabled");return this},disable:function(){this.$el.attr("disabled","disabled");return this},get:function(){var x=f("div.spinbox",this.$el).spinbox("value"),w=this.model.get("currentDatasource");if(_.isFinite(x)){return{operator:this.getOperator(),column:w.get("data"),value:x,description:["is equal to",x].join(" ")}}return false},set:function(w){this.useDatasource(w.column);if(_.isFinite(w.value)){f("div.spinbox",this.$el).spinbox("value",w.value)}return this},reset:function(){this.model.trigger("change:currentDatasource");return this},getOperator:function(){return this.model.get("operator")},addDatasource:function(x){if(_.isArray(x)){for(var w in x){this.collection.add(x[w])}}else{if(_.isObject(x)){this.collection.add(x)}}if(this.model.get("currentDatasourceIndex")<0){this.model.set("currentDatasourceIndex",0);this.model.set("currentDatasource",this.collection.at(this.model.get("currentDatasourceIndex")))}return this},useDatasource:function(w){var y=this.model.get("currentDatasource"),x;if(y.get("data")===w){return false}x=_.findIndex(this.collection.toJSON(),function(z){return z.data===w});if(x>-1){this.model.set("currentDatasourceIndex",x);this.model.set("currentDatasource",this.collection.at(this.model.get("currentDatasourceIndex")))}return true},template:_.template(f.fn.ColumnFilters.NUMBER_SPINNER_TEMPLATE,{variable:"config"}),events:{"changed.fu.spinbox":function(w,x){if(!_.isFinite(x)){f("div.spinbox",this.$el).spinbox("value",this.model.get("spinboxConfig").min)}},"keyup input":function(x){if(x.keyCode===13){var w=this.get();if(w){this.$el.trigger("cf.fw.submit",[w])}}}},tagName:"fieldset",className:"cf-filter-widget fuelux",initialize:function(w){this.version="1.0.5";this.model=new Backbone.Model(f.extend({currentDatasource:null,currentDatasourceIndex:-1},w,{operator:"equals",defaults:{attributes:{"class":"form-control spinbox-input",autocomplete:"off",placeholder:"equals",size:"4"},spinboxConfig:{value:1,min:1,max:999,step:1,hold:true,speed:"medium",disabled:false,units:[]}}}));this.model.on("change:currentDatasource",this.render,this);this.collection=new Backbone.Collection()},render:function(w,z,x){var y=this.model.get("currentDatasource");this.$el.empty().append(this.template({attributes:y.has("attributes")?y.get("attributes"):this.model.get("defaults").attributes}));f("div.spinbox",this.$el).spinbox(y.has("spinboxConfig")?y.get("spinboxConfig"):this.model.get("defaults").spinboxConfig);return this.$el}});var p=Backbone.View.extend({show:function(){this.$el.show();return this},hide:function(){this.$el.hide();return this},enable:function(){this.$el.removeAttr("disabled");return this},disable:function(){this.$el.attr("disabled","disabled");return this},get:function(){var y=f("div.cf-fw-from-date",this.$el).spinbox("value"),x=f("div.cf-fw-to-date",this.$el).spinbox("value"),w=this.model.get("currentDatasource");if(_.isFinite(y)&&_.isFinite(x)){return{operator:this.getOperator(),column:w.get("data"),from:y,to:x,description:["is between",y,"and",x].join(" ")}}return false},set:function(w){this.useDatasource(w.column);if(_.isFinite(w.from)){f("div.cf-fw-from-date",this.$el).spinbox("value",w.from)}if(_.isFinite(w.to)){f("div.cf-fw-to-date",this.$el).spinbox("value",w.to)}return this},reset:function(){this.model.trigger("change:currentDatasource");return this},getOperator:function(){return this.model.get("operator")},addDatasource:function(x){if(_.isArray(x)){for(var w in x){this.collection.add(x[w])}}else{if(_.isObject(x)){this.collection.add(x)}}if(this.model.get("currentDatasourceIndex")<0){this.model.set("currentDatasourceIndex",0);this.model.set("currentDatasource",this.collection.at(this.model.get("currentDatasourceIndex")))}return this},useDatasource:function(w){var y=this.model.get("currentDatasource"),x;if(y.get("data")===w){return false}x=_.findIndex(this.collection.toJSON(),function(z){return z.data===w});if(x>-1){this.model.set("currentDatasourceIndex",x);this.model.set("currentDatasource",this.collection.at(this.model.get("currentDatasourceIndex")))}return true},template:_.template(f.fn.ColumnFilters.NUMBER_BETWEEN_TEMPLATE,{variable:"config"}),events:{"changed.fu.spinbox":function(w,x){if(!_.isFinite(x)){console.log(w)}},"keyup input":function(w){return false}},tagName:"fieldset",className:"cf-filter-widget form-inline fuelux",initialize:function(w){this.version="1.0.4";this.model=new Backbone.Model(f.extend({currentDatasource:null,currentDatasourceIndex:-1},w,{operator:"between",defaults:{attributes:{"class":"form-control spinbox-input",autocomplete:"off",size:"4"},spinboxConfig:{value:1,min:1,max:999,step:1,hold:true,speed:"medium",disabled:false,units:[]}}}));this.model.on("change:currentDatasource",this.render,this);this.collection=new Backbone.Collection()},render:function(w,z,x){var y=this.model.get("currentDatasource");this.$el.empty().append(this.template({attributes:y.has("attributes")?y.get("attributes"):this.model.get("defaults").attributes}));f("div.cf-fw-from-date",this.$el).spinbox(y.has("spinboxConfig")?y.get("spinboxConfig"):this.model.get("defaults").spinboxConfig);f("div.cf-fw-to-date",this.$el).spinbox(y.has("spinboxConfig")?y.get("spinboxConfig"):this.model.get("defaults").spinboxConfig);return this.$el}});var j=Backbone.View.extend({show:function(){this.$el.show();return this},hide:function(){this.$el.hide();return this},enable:function(){this.$el.removeAttr("disabled");return this},disable:function(){this.$el.attr("disabled","disabled");return this},get:function(){if(this.collection.length<1){return false}var w=this.model.get("currentDatasource");return{operator:this.getOperator(),column:w.get("data"),value:this.collection.map(function(x){return x.get("number")}),description:["is one of these: (",f.map(this.collection.models,function(x){return x.get("number")}),")"].join("")}},set:function(w){this.useDatasource(w.column);this.collection.reset(_.map(w.value,function(x){return{number:x}}));return this},reset:function(){this.collection.reset();this.model.trigger("change:currentDatasource");return this},getOperator:function(){return this.model.get("operator")},addDatasource:function(x){if(_.isArray(x)){for(var w in x){this.datasources.add(x[w])}}else{if(_.isObject(x)){this.datasources.add(x)}}if(this.model.get("currentDatasourceIndex")<0){this.model.set("currentDatasourceIndex",0);this.model.set("currentDatasource",this.datasources.at(this.model.get("currentDatasourceIndex")))}return this},useDatasource:function(w){var y=this.model.get("currentDatasource"),x;if(y.get("data")===w){return false}x=_.findIndex(this.datasources.toJSON(),function(z){return z.data===w});if(x>-1){this.model.set("currentDatasourceIndex",x);this.model.set("currentDatasource",this.datasources.at(this.model.get("currentDatasourceIndex")))}return true},template:_.template(f.fn.ColumnFilters.NUMBER_LIST_TEMPLATE,{variable:"config"}),events:{"changed.fu.spinbox":function(w,x){if(!_.isFinite(x)){f("div.spinbox",this.$el).spinbox("value",this.model.get("spinboxConfig").min)}},"keyup input":function(w){if(w.keyCode===13){return false}},"click button.cf-fw-numberList-btn-add":function(w){var x=f("div.spinbox",this.$el).spinbox("value");if(_.isFinite(x)&&this.collection.where({number:x}).length<1){this.collection.add({number:x})}},"click button.close":function(w){this.collection.remove(f(w.currentTarget).data("cid"));return false}},tagName:"fieldset",className:"cf-filter-widget form-inline fuelux",initialize:function(w){this.version="1.0.4";this.model=new Backbone.Model(f.extend({currentDatasource:null,currentDatasourceIndex:-1},w,{operator:"list",defaults:{attributes:{"class":"form-control spinbox-input",autocomplete:"off",size:"4"},spinboxConfig:{value:1,min:1,max:999,step:1,hold:true,speed:"medium",disabled:false,units:[]}}}));this.collection=new Backbone.Collection();this.collection.on("update",this.render,this);this.collection.on("reset",this.render,this);this.model.on("change:currentDatasource",this.render,this);this.datasources=new Backbone.Collection()},render:function(w,z,x){var y=this.model.get("currentDatasource");this.$el.empty().append(this.template({attributes:y.has("attributes")?y.get("attributes"):this.model.get("defaults").attributes,numbers:this.collection}));f("div.spinbox",this.$el).spinbox(y.has("spinboxConfig")?y.get("spinboxConfig"):this.model.get("defaults").spinboxConfig);return this.$el}});var g=Backbone.View.extend({show:function(){this.$el.show();return this},hide:function(){this.$el.hide();return this},enable:function(){this.$el.removeAttr("disabled");return this},disable:function(){this.$el.attr("disabled","disabled");return this},get:function(){var w=f("div.date",this.$el).datepicker("getUTCDate");if(w&&!isNaN(w.getTime())){return{operator:this.getOperator(),value:w.valueOf(),description:["is equal to",moment.utc(w).format("M/D/YYYY")].join(" ")}}else{return false}},set:function(w){if(w.value){f("div.date",this.$el).datepicker("setUTCDate",moment.utc(w.value).toDate())}return this},reset:function(){f("div.date",this.$el).datepicker("update",null);return this},getOperator:function(){return this.model.get("operator")},template:_.template(f.fn.ColumnFilters.DATEPICKER_TEMPLATE,{variable:"config"}),tagName:"fieldset",className:"cf-filter-widget",initialize:function(w){this.version="1.0.8";this.model=new Backbone.Model(f.extend({attributes:{"class":"form-control date",autocomplete:"off",size:"12",value:""},datepickerConfig:{autoclose:false,clearBtn:true,format:f.fn.ColumnFilters.DateFormats.en_us,minViewMode:f.fn.ColumnFilters.DatepickerViewModes.DAYS,startView:f.fn.ColumnFilters.DatepickerStartViewModes.MONTH,todayBtn:true,todayHighlight:true,weekStart:f.fn.ColumnFilters.DatepickerWeekStartDays.SUNDAY}},w,{operator:"equals"}));this.render()},render:function(){this.$el.empty().append(this.template(this.model.toJSON()));f("div.date",this.$el).datepicker(this.model.get("datepickerConfig"));return this.$el}});var o=Backbone.View.extend({show:function(){this.$el.show();return this},hide:function(){this.$el.hide();return this},enable:function(){this.$el.removeAttr("disabled");return this},disable:function(){this.$el.attr("disabled","disabled");return this},get:function(){var w=f("div.date",this.$el).datepicker("getUTCDate");if(w&&!isNaN(w.getTime())){return{operator:this.getOperator(),value:w.valueOf(),description:["is after",moment.utc(w).format("M/D/YYYY")].join(" ")}}else{return false}},set:function(w){if(w.value){f("div.date",this.$el).datepicker("setUTCDate",moment.utc(w.value).toDate())}return this},reset:function(){f("div.date",this.$el).datepicker("update",null);return this},getOperator:function(){return this.model.get("operator")},template:_.template(f.fn.ColumnFilters.DATEPICKER_TEMPLATE,{variable:"config"}),tagName:"fieldset",className:"cf-filter-widget",initialize:function(w){this.version="1.0.5";this.model=new Backbone.Model(f.extend({attributes:{"class":"form-control date",autocomplete:"off",size:"12",value:""},datepickerConfig:{autoclose:false,clearBtn:true,format:f.fn.ColumnFilters.DateFormats.en_us,minViewMode:f.fn.ColumnFilters.DatepickerViewModes.DAYS,startView:f.fn.ColumnFilters.DatepickerStartViewModes.MONTH,todayBtn:true,todayHighlight:true,weekStart:f.fn.ColumnFilters.DatepickerWeekStartDays.SUNDAY}},w,{operator:"after"}));this.render()},render:function(){this.$el.empty().append(this.template(this.model.toJSON()));f("div.date",this.$el).datepicker(this.model.get("datepickerConfig"));return this.$el}});var c=Backbone.View.extend({show:function(){this.$el.show();return this},hide:function(){this.$el.hide();return this},enable:function(){this.$el.removeAttr("disabled");return this},disable:function(){this.$el.attr("disabled","disabled");return this},get:function(){var w=f("div.date",this.$el).datepicker("getUTCDate");if(w&&!isNaN(w.getTime())){return{operator:this.getOperator(),value:w.valueOf(),description:["is before",moment.utc(w).format("M/D/YYYY")].join(" ")}}else{return false}},set:function(w){if(w.value){f("div.date",this.$el).datepicker("setUTCDate",moment.utc(w.value).toDate())}return this},reset:function(){f("div.date",this.$el).datepicker("update",null);return this},getOperator:function(){return this.model.get("operator")},template:_.template(f.fn.ColumnFilters.DATEPICKER_TEMPLATE,{variable:"config"}),tagName:"fieldset",className:"cf-filter-widget",initialize:function(w){this.version="1.0.5";this.model=new Backbone.Model(f.extend({attributes:{"class":"form-control date",autocomplete:"off",size:"12",value:""},datepickerConfig:{autoclose:false,clearBtn:true,format:f.fn.ColumnFilters.DateFormats.en_us,minViewMode:f.fn.ColumnFilters.DatepickerViewModes.DAYS,startView:f.fn.ColumnFilters.DatepickerStartViewModes.MONTH,todayBtn:true,todayHighlight:true,weekStart:f.fn.ColumnFilters.DatepickerWeekStartDays.SUNDAY}},w,{operator:"before"}));this.render()},render:function(){this.$el.empty().append(this.template(this.model.toJSON()));f("div.date",this.$el).datepicker(this.model.get("datepickerConfig"));return this.$el}});var m=Backbone.View.extend({show:function(){this.$el.show();return this},hide:function(){this.$el.hide();return this},enable:function(){this.$el.removeAttr("disabled");return this},disable:function(){this.$el.attr("disabled","disabled");return this},get:function(){var x=f("input:first-child",this.$el).datepicker("getUTCDate"),z=f("input:last-child",this.$el).datepicker("getUTCDate"),y=_.isDate(x)?x.valueOf():NaN,w=_.isDate(z)?z.valueOf():NaN;if((!isNaN(y)&&!isNaN(w))&&(y<=w)){return{operator:this.getOperator(),fromDate:y,toDate:w,description:["is between",moment.utc(x).format("M/D/YYYY"),"and",moment.utc(z).format("M/D/YYYY")].join(" ")}}else{return false}},set:function(w){f("input:first-child",this.$el).datepicker("setUTCDate",moment.utc(w.fromDate).toDate());f("input:last-child",this.$el).datepicker("setUTCDate",moment.utc(w.toDate).toDate());return this},reset:function(){f("input:first-child",this.$el).datepicker("update",null);f("input:last-child",this.$el).datepicker("update",null);return this},getOperator:function(){return this.model.get("operator")},template:_.template(f.fn.ColumnFilters.DATEPICKER_BETWEEN_TEMPLATE,{variable:"config"}),tagName:"fieldset",className:"cf-filter-widget",initialize:function(w){this.version="1.0.8";this.model=new Backbone.Model(f.extend({fromAttributes:{"class":"form-control date",autocomplete:"off",size:"12",value:""},toAttributes:{"class":"form-control date",autocomplete:"off",size:"12",value:""},datepickerConfig:{autoclose:false,clearBtn:true,format:f.fn.ColumnFilters.DateFormats.en_us,minViewMode:f.fn.ColumnFilters.DatepickerViewModes.DAYS,startView:f.fn.ColumnFilters.DatepickerStartViewModes.MONTH,todayBtn:true,todayHighlight:true,weekStart:f.fn.ColumnFilters.DatepickerWeekStartDays.SUNDAY}},w,{operator:"between"}));this.render()},render:function(){this.$el.empty().append(this.template(this.model.toJSON()));f("div.input-daterange",this.$el).datepicker(this.model.get("datepickerConfig"));return this.$el}});var i=Backbone.View.extend({show:function(){this.$el.show();return this},hide:function(){this.$el.hide();return this},enable:function(){this.$el.removeAttr("disabled");return this},disable:function(){this.$el.attr("disabled","disabled");return this},get:function(){if(this.collection.length<1){return false}return{operator:this.getOperator(),value:this.collection.map(function(w){return moment.utc(w.get("date")).valueOf()}),description:["is one of these (",f.map(this.collection.models,function(w){return moment.utc(w.get("date")).format("M/D/YYYY")}),")"].join("")}},set:function(w){this.collection.reset(_.map(w.value,function(x){return{date:moment.utc(x).toDate()}}));return this},reset:function(){this.collection.reset();return this},getOperator:function(){return this.model.get("operator")},template:_.template(f.fn.ColumnFilters.DATE_LIST_TEMPLATE,{variable:"config"}),events:{"click button.cf-fw-numberList-btn-add":function(w){var x=f("div.date",this.$el).datepicker("getUTCDate");if(x&&!isNaN(x.valueOf())&&this.collection.where({date:x}).length<1){this.collection.add({date:x})}},"click button.close":function(w){this.collection.remove(f(w.currentTarget).data("cid"));return false}},tagName:"fieldset",className:"cf-filter-widget form-inline",initialize:function(w){this.version="1.0.11";this.model=new Backbone.Model(f.extend({attributes:{"class":"form-control date",autocomplete:"off",size:"12"},datepickerConfig:{autoclose:true,clearBtn:true,format:f.fn.ColumnFilters.DateFormats.en_us,minViewMode:f.fn.ColumnFilters.DatepickerViewModes.DAYS,startView:f.fn.ColumnFilters.DatepickerStartViewModes.MONTH,todayBtn:true,todayHighlight:true,weekStart:f.fn.ColumnFilters.DatepickerWeekStartDays.SUNDAY}},w,{operator:"list"}));this.collection=new Backbone.Collection();this.collection.on("update",this.render,this);this.collection.on("reset",this.render,this);this.render()},render:function(w,x){this.$el.empty().append(this.template(f.extend(this.model.toJSON(),{dates:this.collection})));f("div.date",this.$el).datepicker(this.model.get("datepickerConfig"));return this.$el}});var t=Backbone.View.extend({show:function(){this.$el.show();return this},hide:function(){this.$el.hide();return this},enable:function(){this.$el.removeAttr("disabled");return this},disable:function(){this.$el.attr("disabled","disabled");return this},get:function(){return{operator:this.getOperator(),value:f("select",this.$el).val(),description:["is in",moment({month:f("select",this.$el).val()*1}).format("MMMM")].join(" ")}},set:function(w){if(w.value>-1&&w.value<12){f("select",this.$el).val(w.value)}return this},reset:function(){f("select",this.$el).val(0);return this},getOperator:function(){return this.model.get("operator")},template:_.template(['<div class="input-group">','<select class="form-control input-sm">',"<% for(var i in config.months) { %>",'<option value="<%= ((i*1)) %>"><%= config.months[i] %></option>',"<% } %>","</select>","</div>"].join(""),{variable:"config"}),events:{},tagName:"fieldset",className:"cf-filter-widget",initialize:function(w){this.version="1.0.8";this.model=new Backbone.Model(f.extend({attributes:{"class":"form-control",autocomplete:"off"}},w,{operator:"month",months:["January","February","March","April","May","June","July","August","September","October","November","December"]}));this.render()},render:function(){this.$el.empty().append(this.template(this.model.toJSON()));return this.$el}});var v=Backbone.View.extend({show:function(){this.$el.show();return this},hide:function(){this.$el.hide();return this},enable:function(){this.$el.removeAttr("disabled");return this},disable:function(){this.$el.attr("disabled","disabled");return this},get:function(){var w=f("div.date",this.$el).datepicker("getUTCDate");if(w){return{operator:this.getOperator(),month:f("select",this.$el).val()*1,year:moment.utc(w).year(),start:moment.utc(w).valueOf(),description:["is in",moment.utc({month:f("select",this.$el).val()*1}).format("MMMM"),"of year",moment.utc(w).format("YYYY")].join(" ")}}return false},set:function(w){if(w.month&&w.year){f("select",this.$el).val(w.month);f("div.date",this.$el).datepicker("update",moment({year:w.year}).toDate())}return this},reset:function(){f("select",this.$el).val(0);f("div.date",this.$el).datepicker("update",null);return this},getOperator:function(){return this.model.get("operator")},template:_.template(['<div class="form-group pull-left">','<select class="form-control input-sm">',"<% for(var i in config.months) { %>",'<option value="<%= ((i*1)) %>"><%= config.months[i] %></option>',"<% } %>","</select>","</div>",'<div class="form-group pull-left">','<div class="input-group date">','<input type="text" <%= _.map(_.omit(config.attributes, "type"), function(val,key){ return [key,\'="\',val,\'"\'].join("") }).join(" ") %> />','<span class="input-group-addon">','<span class="glyphicon glyphicon-calendar"></span>',"</span>","</div>","</div>"].join(""),{variable:"config"}),events:{},tagName:"fieldset",className:"cf-filter-widget",initialize:function(w){this.version="1.0.4";this.model=new Backbone.Model(f.extend({attributes:{"class":"form-control date",autocomplete:"off",size:"12",value:""}},w,{operator:"monthYear",datepickerConfig:{autoclose:true,clearBtn:true,format:f.fn.ColumnFilters.DateFormats.year,minViewMode:f.fn.ColumnFilters.DatepickerViewModes.YEARS,startView:f.fn.ColumnFilters.DatepickerStartViewModes.DECADE},months:["January","February","March","April","May","June","July","August","September","October","November","December"]}));this.render()},render:function(){this.$el.empty().append(this.template(this.model.toJSON()));f("div.date",this.$el).datepicker(this.model.get("datepickerConfig"));return this.$el}});var e=Backbone.View.extend({show:function(){this.$el.show();return this},hide:function(){this.$el.hide();return this},enable:function(){this.$el.removeAttr("disabled");return this},disable:function(){this.$el.attr("disabled","disabled");return this},get:function(){var w=f("div.date",this.$el).datepicker("getUTCDate");if(w&&!isNaN(w.getTime())){return{operator:this.getOperator(),value:moment.utc(w).year(),start:moment.utc(w).valueOf(),description:["year is",moment.utc(w).format("YYYY")].join(" ")}}return false},set:function(w){if(_.isFinite(w.value)){f("div.date",this.$el).datepicker("setUTCDate",new Date(w.value,1,1))}return this},reset:function(){f("div.date",this.$el).datepicker("update",null);return this},getOperator:function(){return this.model.get("operator")},template:_.template(f.fn.ColumnFilters.DATEPICKER_TEMPLATE,{variable:"config"}),tagName:"fieldset",className:"cf-filter-widget",initialize:function(w){this.version="1.0.5";this.model=new Backbone.Model(f.extend({attributes:{"class":"form-control date",autocomplete:"off",size:"6",value:""}},w,{operator:"year",datepickerConfig:{autoclose:true,clearBtn:true,format:f.fn.ColumnFilters.DateFormats.year,minViewMode:f.fn.ColumnFilters.DatepickerViewModes.YEARS,startView:f.fn.ColumnFilters.DatepickerStartViewModes.DECADE}}));this.render()},render:function(){this.$el.empty().append(this.template(this.model.toJSON()));f("div.date",this.$el).datepicker(this.model.get("datepickerConfig"));return this.$el}});var b=Backbone.View.extend({show:function(){this.$el.show();return this},hide:function(){this.$el.hide();return this},enable:function(){this.$el.removeAttr("disabled");return this},disable:function(){this.$el.attr("disabled","disabled");return this},get:function(){var y=f("label.active input",this.$el).val()*1,x=this.model.get("currentDatasource"),w=x.has("convertNumeric")?x.get("convertNumeric"):this.model.get("defaults").convertNumeric;return{operator:this.getOperator(),column:x.get("data"),value:w?y:Boolean(y),description:["is",y?(x.has("trueLabel")?x.get("trueLabel"):this.model.get("defaults").trueLabel):(x.has("falseLabel")?x.get("falseLabel"):this.model.get("defaults").falseLabel)].join(" ")}},set:function(w){this.useDatasource(w.column);f("label",this.$el).first().toggleClass("active",w.value);f("label",this.$el).last().toggleClass("active",!w.value);return this},reset:function(){this.model.trigger("change:currentDatasource");return this},getOperator:function(){return this.model.get("operator")},addDatasource:function(x){if(_.isArray(x)){for(var w in x){this.collection.add(x[w])}}else{if(_.isObject(x)){this.collection.add(x)}}if(this.model.get("currentDatasourceIndex")<0){this.model.set("currentDatasourceIndex",0);this.model.set("currentDatasource",this.collection.at(this.model.get("currentDatasourceIndex")))}return this},useDatasource:function(w){var y=this.model.get("currentDatasource"),x;if(y.get("data")===w){return false}x=_.findIndex(this.collection.toJSON(),function(z){return z.data===w});if(x>-1){this.model.set("currentDatasourceIndex",x);this.model.set("currentDatasource",this.collection.at(this.model.get("currentDatasourceIndex")))}return true},template:_.template(['<div class="btn-group" data-toggle="buttons">','<label class="btn btn-primary<% if(config.value) { %> active<% } %>">','<input type="radio"<% if(config.value) { %> checked="checked"<% } %> value="1" /> <%= config.trueLabel %>',"</label>",'<label class="btn btn-primary<% if(!config.value) { %> active<% } %>">','<input type="radio"<% if(!config.value) { %> checked="checked"<% } %> value="0" /> <%= config.falseLabel %>',"</label>","</div>"].join(""),{variable:"config"}),tagName:"fieldset",className:"cf-filter-widget",initialize:function(w){this.version="1.0.4";this.model=new Backbone.Model(f.extend({currentDatasource:null,currentDatasourceIndex:-1},w,{operator:"equals",defaults:{trueLabel:"Yes",falseLabel:"No",convertNumeric:false,value:true}}));this.model.on("change:currentDatasource",this.render,this);this.collection=new Backbone.Collection()},render:function(w,z,x){var y=this.model.get("currentDatasource");this.$el.empty().append(this.template(f.extend({trueLabel:y.has("trueLabel")?y.get("trueLabel"):this.model.get("defaults").trueLabel,falseLabel:y.has("falseLabel")?y.get("falseLabel"):this.model.get("defaults").falseLabel,value:y.has("value")?y.get("value"):this.model.get("defaults").value})));return this.$el}});var d=Backbone.View.extend({show:function(){this.$el.show();return this},hide:function(){this.$el.hide();return this},enable:function(){this.$el.removeAttr("disabled");return this},disable:function(){this.$el.attr("disabled","disabled");return this},get:function(){var w=f.map(f("input:checked",this.$el),function(y,x){return{code:y.value,name:f(y).data("label")}});if(w.length){return{operator:this.getOperator(),table:this.model.get("currentDatasource").get("referenceTable"),column:this.model.get("currentDatasource").get("data"),value:w,description:["is one of these: (",_.pluck(w,"name").join(", "),")"].join("")}}return false},set:function(w){this.useDatasource(w.table,w.column);f("input",this.$el).each(function(x,y){y.checked=_.contains(_.pluck(w.value,"code"),y.value)});return this},reset:function(){this.model.trigger("change:currentDatasource");return this},getOperator:function(){return this.model.get("operator")},addDatasource:function(x){if(_.isArray(x)){for(var w in x){this.collection.add(x[w])}}else{if(_.isObject(x)){this.collection.add(x)}}if(this.model.get("currentDatasourceIndex")<0){this.model.set("currentDatasourceIndex",0);this.model.set("currentDatasource",this.collection.at(this.model.get("currentDatasourceIndex")))}return this},useDatasource:function(x,w){var z=this.model.get("currentDatasource"),y;if(z.get("referenceTable")===x&&z.get("data")===w){return false}y=_.findIndex(this.collection.toJSON(),function(A){return A.referenceTable===x&&A.data===w});if(y>-1){this.model.set("currentDatasourceIndex",y);this.model.set("currentDatasource",this.collection.at(this.model.get("currentDatasourceIndex")))}return true},template:_.template(['<div class="dropdown">','<button type="button" class="btn btn-info dropdown-toggle" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">',"Select",'<span class="caret"></span>',"</button>",'<ul class="dropdown-menu cf-enum-dropdown-list">','<% var ds = config.datasources.at(config.currentDatasourceIndex); for(var i in ds.get("datasource")) { %>',"<li>",'<div class="checkbox cf-fw-enum-list-item">',"<label>",'<input type="checkbox" value="<%= ds.get("datasource")[i][ds.get("valueKey")] %>" data-label="<%= ds.get("datasource")[i][ds.get("displayKey")] %>" />','<span class="text-capitalize"><%= ds.get("datasource")[i][ds.get("displayKey")] %></span>',"</label>","</div>","</li>","<% } %>","</ul>","</div>"].join(""),{variable:"config"}),events:{"change .dropdown-menu input":function(w){w.stopPropagation();return false},"click .dropdown-menu input, .dropdown-menu label":function(w){w.stopPropagation()}},tagName:"fieldset",className:"cf-filter-widget",initialize:function(w){this.version="1.0.4";this.model=new Backbone.Model(f.extend({currentDatasource:null,currentDatasourceIndex:-1},w,{operator:"equals"}));this.model.on("change:currentDatasource",this.render,this);this.collection=new Backbone.Collection()},render:function(w,y,x){this.$el.empty().append(this.template(f.extend(this.model.toJSON(),{datasources:this.collection})));return this.$el}});var a=Backbone.View.extend({show:function(){this.$el.show();return this},hide:function(){this.$el.hide();return this},enable:function(){this.$el.removeAttr("disabled");return this},disable:function(){this.$el.attr("disabled","disabled");return this},get:function(){if(this.model.get("selectedItem")){var w=this.model.get("currentDatasource").get("displayKey");return{operator:this.getOperator(),table:this.model.get("currentDatasource").get("referenceTable"),column:this.model.get("currentDatasource").get("data"),value:this.model.get("selectedItem"),valueKey:this.model.get("currentDatasource").get("valueKey"),description:["is",typeof(w)==="string"?this.model.get("selectedItem")[w]:w(this.model.get("selectedItem"))].join(" ")}}return false},set:function(x){this.useDatasource(x.table,x.column);this.model.set("selectedItem",x.value);var w=this.model.get("currentDatasource").get("displayKey");f("input.typeahead",this.$el).typeahead("val",typeof(w)==="string"?x.value[w]:w(x.value));return this},reset:function(){this.model.trigger("change:currentDatasource");return this},getOperator:function(){return this.model.get("operator")},addDatasource:function(x){if(_.isArray(x)){for(var w in x){this.collection.add(x[w])}}else{if(_.isObject(x)){this.collection.add(x)}}if(this.model.get("currentDatasourceIndex")<0){this.model.set("currentDatasourceIndex",0);this.model.set("currentDatasource",this.collection.at(this.model.get("currentDatasourceIndex")))}return this},useDatasource:function(x,w){var z=this.model.get("currentDatasource"),y;this.model.set("selectedItem",undefined);if(z.get("referenceTable")===x&&z.get("data")===w){return false}y=_.findIndex(this.collection.toJSON(),function(A){return A.referenceTable===x&&A.data===w});if(y>-1){this.model.set("currentDatasourceIndex",y);this.model.set("currentDatasource",this.collection.at(this.model.get("currentDatasourceIndex")))}return true},displayItem:function(x){var w=this.model.get("currentDatasource").get("displayKey");return typeof(w)==="string"?x[w]:w(x)},template:_.template(['<input type="text" autocomplete="off" data-provide="typeahead" class="form-control typeahead" value="" />'].join(""),{variable:"config"}),events:{"typeahead:select":function(x,w){this.model.set("selectedItem",w)},"typeahead:autocomplete":function(x,w){this.model.set("selectedItem",w)},"typeahead:change":function(w){if(this.model.get("selectedItem")){f("input",this.$el).typeahead("val",this.displayItem(this.model.get("selectedItem")))}},"typeahead:idle":function(w){if(this.model.get("selectedItem")){f("input.typeahead",this.$el).typeahead("val",this.displayItem(this.model.get("selectedItem")))}}},tagName:"fieldset",className:"cf-filter-widget",initialize:function(w){this.version="1.0.5";this.model=new Backbone.Model(f.extend({currentDatasource:null,currentDatasourceIndex:-1},w,{operator:"equals",selectedItem:undefined}));this.model.on("change:currentDatasource",this.render,this);this.collection=new Backbone.Collection()},render:function(){this.$el.empty().append(this.template(this.model.toJSON()));var w=this.model.get("currentDatasource");f("input.typeahead",this.$el).typeahead({highlight:false,hint:false,minLength:3},{name:w.get("data"),displayKey:w.get("displayKey"),source:w.get("datasource").ttAdapter()});return this.$el}});f.fn.ColumnFilters.DateFormats={en_us:"m/d/yyyy",en_gb:"dd-mm-yyyy",zh_cn:"yyyy.mm.dd",month_year:"MM, yyyy",year:"yyyy"};f.fn.ColumnFilters.DatepickerViewModes={DAYS:0,MONTHS:1,YEARS:2};f.fn.ColumnFilters.DatepickerStartViewModes={MONTH:0,YEAR:1,DECADE:2};f.fn.ColumnFilters.DatepickerWeekStartDays={SUNDAY:0,MONDAY:1,TUESDAY:2,WEDNESDAY:3,THURSDAY:4,FRIDAY:5,SATURDAY:6};f.fn.ColumnFilters.Modes={DEFAULT:0,CATEGORY_SETS:1,NO_TYPES:2,CATEGORIES_NO_TYPES:3};f.fn.ColumnFilters.FilterSelectionTypes={DEFAULT:0,COMMON_VALUE:1,REFERENCE:2};f.fn.ColumnFilters.ControlModes={NORMAL:0,EDIT:1,DISABLED:2};f.fn.ColumnFilters.defaults={wrapperAttributes:{},DB_TO_CF_TYPES:{string:"text",varchar:"text",tinytext:"text",mediumtext:"text",text:"text",longtext:"text",num:"number",number:"number",tinyint:"number",smallint:"number",mediumint:"number","int":"number",bigint:"number","double":"number","float":"number",decimal:"number","boolean":"boolean",bool:"boolean",date:"date",datetime:"date",timestamp:"date",reference:"biglist",object:"enum"},mode:f.fn.ColumnFilters.Modes.DEFAULT,url:null,ajax:{},filters:[],filterCategories:[],filterSets:[],table:null,columns:[],dataTypeWidgets:[{type:"text",widgets:[new q(),new r()]},{type:"number",widgets:[new h(),new p(),new j()]},{type:"date",widgets:[new g(),new o(),new c(),new m(),new i(),new t(),new v(),new e()]},{type:"boolean",widgets:[new b()]},{type:"enum",widgets:[new d()]},{type:"biglist",widgets:[new a()]}],convertBooleanToNumeric:true,columnsControlConfig:{mode:f.fn.ColumnFilters.ControlModes.NORMAL,filterSelectionType:f.fn.ColumnFilters.FilterSelectionTypes.DEFAULT,defaultSelectedColumnValue:null,defaultSelectedCommonValues:[]},filterFactoryConfig:{mode:f.fn.ColumnFilters.ControlModes.NORMAL},filtersContainerConfig:{activeColumnIndex:-1}};f.fn.ColumnFilters.tokenizers={whitespace:function(w){var y,x,z=Bloodhound.tokenizers.whitespace(w.name);for(y in z){x=0;while((x+1)<z[y].length){z.push(z[y].substr(x++,z[y].length))}}return z}};f.fn.ColumnFilters.VERSION="1.0.3"})(jQuery);